{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["quoteDBUrl","App","useState","quote","setQuote","author","setAuthor","setRandomNumber","quotesArray","setQuotesArray","fetchQuotes","url","a","fetch","response","json","parsedJSON","quotes","console","log","useEffect","className","id","href","encodeURI","onClick","randomInteger","Math","floor","random","length","getRandomQuote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAIIA,EAAa,yIAuDFC,MAnDf,WACE,MAA0BC,mBAAS,oDAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,aAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,mBAAS,GAAjD,mBAAqBK,GAArB,WACA,EAAsCL,mBAAS,MAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACKC,MAAMF,GADX,cACZG,EADY,gBAEOA,EAASC,OAFhB,OAEZC,EAFY,OAGlBP,EAAeO,EAAWC,QAC1BC,QAAQC,IAAIH,GAJM,2CAAH,sDA+BjB,OAvBAI,qBAAU,WACRV,EAAYV,KACX,CAACA,IAsBF,qBAAKqB,UAAW,MAAhB,SACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKC,GAAG,YAAR,UACA,mBAAGA,GAAG,OAAN,SAAcnB,IACd,oBAAImB,GAAG,SAAP,SAAiBjB,IACjB,mBAAGkB,KAAOC,UAAU,4CAAD,OAA6CrB,EAA7C,aAAuDE,IAAWiB,GAAG,cAAxF,yBACA,wBAAQA,GAAG,YAAYG,QAAW,kBAvBxC,WACE,IAAIC,EAAgBC,KAAKC,MAAMD,KAAKE,SAAWrB,EAAYsB,QAC3DvB,EAAgBmB,GAChBtB,EAASI,EAAYkB,GAAevB,OACpCG,EAAUE,EAAYkB,GAAerB,QAmBO0B,IAAxC,0CCxCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.30d22e15.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.scss';\n\n\nlet quoteDBUrl = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\n\n\nfunction App() {\n  const [quote, setQuote] = useState(\"Everything has beauty, but not everyone can see.\");\n  const [author, setAuthor] = useState(\"Confucius\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotesArray, setQuotesArray] = useState(null);\n\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json()\n    setQuotesArray(parsedJSON.quotes)\n    console.log(parsedJSON)\n  }\n\n\n  useEffect(() => {\n    fetchQuotes(quoteDBUrl)\n  }, [quoteDBUrl])\n\n\n\n\n  function getRandomQuote() {\n    let randomInteger = Math.floor(Math.random() * quotesArray.length)\n    setRandomNumber(randomInteger);\n    setQuote(quotesArray[randomInteger].quote)\n    setAuthor(quotesArray[randomInteger].author)\n  }\n  \n//   const OURquotesArray = [{quote: \"Everything has beauty, but not everyone can see.\", author: \"Confucius\"}, \n//   {quote: \"It does not matter how slowly you go as long as you do not stop.\", author: \"Confucius\"}, \n//   {quote: \"Whatever you can do, or dream you can, begin it. Boldness has genius, power and magic in it\", author: \"Johann Wolfgang von Goethe\"},\n//   {quote: \"Eighty percent of success is showing up.\", author: \"Woody Allen\"}\n// ]\n\n\n\n\n  return (\n    <div className= \"App\">\n      <header className=\"App-header\">\n        <div id=\"quote-box\">\n        <p id=\"text\">{quote}</p>\n        <h3 id=\"author\">{author}</h3>\n        <a href= {encodeURI(`http://www.twitter.com/intent/tweet?text=${quote} -${author}`)} id=\"tweet-quote\">Tweet Quote</a>\n        <button id=\"new-quote\" onClick = {() => getRandomQuote()}>Display Random Quote</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}